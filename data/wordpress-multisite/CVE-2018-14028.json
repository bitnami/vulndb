{
  "schema_version": "1.5.0",
  "id": "CVE-2018-14028",
  "details": "In WordPress 4.9.7, plugins uploaded via the admin area are not verified as being ZIP files. This allows for PHP files to be uploaded. Once a PHP file is uploaded, the plugin extraction fails, but the PHP file remains in a predictable wp-content/uploads location, allowing for an attacker to then execute the file. This represents a security risk in limited scenarios where an attacker (who does have the required capabilities for plugin uploads) cannot simply place arbitrary PHP code into a valid plugin ZIP file and upload that plugin, because a machine's wp-content/plugins directory permissions were set up to block all new plugins.",
  "aliases": [
    "CVE-2018-14028"
  ],
  "affected": [
    {
      "packages": [
        {
          "ecosystem": "bitnami",
          "name": "wordpress-multisite",
          "purl": "pkg:bitnami/wordpress-multisite"
        }
      ],
      "severity": [
        {
          "type": "CVSS_V3",
          "score": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "versions": [
        "4.9.7"
      ]
    }
  ],
  "database_specific": {
    "severity": "High",
    "cpes": [
      "cpe:2.3:a:wordpress:wordpress:4.9.7:*:*:*:*:*:*:*"
    ]
  },
  "references": [
    {
      "type": "WEB",
      "url": "http://www.securityfocus.com/bid/105060"
    },
    {
      "type": "WEB",
      "url": "https://core.trac.wordpress.org/ticket/44710"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rastating/wordpress-exploit-framework/pull/52"
    },
    {
      "type": "WEB",
      "url": "https://rastating.github.io/unrestricted-file-upload-via-plugin-uploader-in-wordpress/"
    }
  ],
  "published": "2023-05-30T11:39:51.282Z",
  "modified": "2023-05-30T11:39:51.282Z"
}